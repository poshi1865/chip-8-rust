mod chip8;
mod display;

use chip8::Chip8;
use display::BUFFER_WIDTH;
use display::BUFFER_HEIGHT;
use display::Display;

fn init_machine(chip8: &mut Chip8) {
    // Load fonts
    let fonts: [u8; 80] = [
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    ];

    let mut font_counter = 0;
    // Write the fonts to memory into addresses 050->09f
    for i in 0x50..=0x9F {
        chip8.memory[i] = fonts[font_counter];
        font_counter += 1;
    }
}

fn main() {
    // Create memory
    let mut chip8: Chip8 = Chip8 {
        memory: [0; 4096],
        pc: 0,
        i: 0,
        v: [0; 16],
        stack: [0; 16],
        delay_timer: 0,
        sound_timer: 0,
        display: [false; BUFFER_WIDTH * BUFFER_HEIGHT],
        keypad: [false; 16],
    };
    init_machine(&mut chip8);

    let display: Display = Display {
        screen_width: 1280,
        screen_height: 720
    };
    display.create_window();
}
